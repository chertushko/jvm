public class JvmComprehension {
/*
Класс JvmComprehension будет загружен Application ClassLoader-ом в момент обращения к этому классу
Далее происходит связывание (Linked) - проверка валидности кода, подготовка примитивов в статических полях,
    связывание ссылок на классы Object / Integer, происходит нициализация класса.
Класс загружается в Metaspace.
Далее код выполняется построчно
Программа ищет точку входа (метод main), в сэке создается фрейм метода main(),
// 1 - переменная i со значением 1 сохраняется в стеке, во фрейме main
// 2 - объект Object созлается в куче, в стеке фрейма main создается переменная о и присваивается ссылка на этот объект в куче
// 3 - в куче создается объект Integer, в стеке - переменная ii, в которой сохраняется ссылка на этот объект
// 4 - в стеке создается фрейм для метода printAll(), в этом фрейме сохранятся переменные o, ii со ссылками на
созданные ранее в куче объекты Object (для о)/ Integer (для ii) и переменная i = 1,
// 5 - создается в куче новый объект Integer со значением 700, в стеке (в фрейме метода printAll) - переменная uselessVar
со ссылкой на этот объект
// 6 - в стеке создается фрейм для метода toString(), в куче сохраняется результат работы метода,
в стеке создается фрейм для метода println, / после выхода из toString - фрейм удаляется,
после выхода из метода println - соответствующий фрейм удаляется
// 7 - после выхода из метода printAll этот фрейм удаляется,
создается фрейм для метода println. В кучу помещается строка со значением "finished", после выполнения метода этот фрейм удаляется
После окончания выполнения метода main удаляется фрейм этого метода
Из кучи удалится объект класса Integer со значением 700.
 */
    public static void main(String[] args) {
        int i = 1;                      // 1
        Object o = new Object();        // 2
        Integer ii = 2;                 // 3
        printAll(o, i, ii);             // 4
        System.out.println("finished"); // 7
    }

    private static void printAll(Object o, int i, Integer ii) {
        Integer uselessVar = 700;                   // 5
        System.out.println(o.toString() + i + ii);  // 6
    }
}

